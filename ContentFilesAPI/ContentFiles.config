<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ContentFilesAPI</name>
    </assembly>
    <members>
        <member name="T:ContentFilesAPI.Controllers.ContentFilesController">
            <summary>
            API for managing ContentFile resources
            </summary>
        </member>
        <member name="F:ContentFilesAPI.Controllers.ContentFilesController._logger">
            <summary>
            Logger instance
            </summary>
        </member>
        <member name="F:ContentFilesAPI.Controllers.ContentFilesController._configuration">
            <summary>
            The configuration instance
            </summary>
        </member>
        <member name="M:ContentFilesAPI.Controllers.ContentFilesController.#ctor(Microsoft.Extensions.Logging.ILogger{ContentFilesAPI.Controllers.ContentFilesController},Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Instantiate a ContentFilesController with Dependency Injection
            </summary>
            <param name="logger"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:ContentFilesAPI.Controllers.ContentFilesController.PutFile(System.String,System.String,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Creates/updates file with given filename.
            </summary>
            <param name="containerName"></param>
            <param name="fileName"></param>
            <param name="fileData"></param>
            <returns></returns>
        </member>
        <member name="M:ContentFilesAPI.Controllers.ContentFilesController.UpdateFile(System.String,System.String,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Updates file with given filename.
            </summary>
            <param name="containerName"></param>
            <param name="fileName"></param>
            <param name="fileData"></param>
            <returns></returns>
        </member>
        <member name="M:ContentFilesAPI.Controllers.ContentFilesController.DeleteFile(System.String,System.String)">
            <summary>
            Deletes file with given filename.
            </summary>
            <param name="containerName"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:ContentFilesAPI.Controllers.ContentFilesController.GetFileByFileName(System.String,System.String)">
            <summary>
            Get a ContentFile by name
            </summary>
            <param name="containerName"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:ContentFilesAPI.Controllers.ContentFilesController.GetAllFiles(System.String)">
            <summary>
            Get all ContentFiles
            </summary>
            <param name="containerName"></param>
            <returns>A list of all content files.</returns>
        </member>
        <member name="T:ContentFilesAPI.DTO.ContentFileSummary">
            <summary>
            Data Transfer Object to serialize a content file descriptor.
            </summary>
        </member>
        <member name="F:ContentFilesAPI.DTO.ContentFileSummary.name">
            <summary>
            Name of file
            </summary>
        </member>
        <member name="M:ContentFilesAPI.DTO.ContentFileSummary.#ctor(System.String)">
            <summary>
            Creates an error.
            </summary>
            <param name="name">Name of file.</param>
        </member>
        <member name="T:ContentFilesAPI.DTO.ErrorNumber">
            <summary>
            Enumeration of errors to error numbers.
            </summary>
        </member>
        <member name="F:ContentFilesAPI.DTO.ErrorNumber.EXISTS">
            <summary>
            Item already exists.
            </summary>
        </member>
        <member name="F:ContentFilesAPI.DTO.ErrorNumber.TOOLARGE">
            <summary>
            Parameter is too large/long.
            </summary>
        </member>
        <member name="F:ContentFilesAPI.DTO.ErrorNumber.REQUIRED">
            <summary>
            Parameter is required.
            </summary>
        </member>
        <member name="F:ContentFilesAPI.DTO.ErrorNumber.NOTFOUND">
            <summary>
            Item with given id is not found.
            </summary>
        </member>
        <member name="F:ContentFilesAPI.DTO.ErrorNumber.TOOSMALL">
            <summary>
            Parameter too small.
            </summary>
        </member>
        <member name="F:ContentFilesAPI.DTO.ErrorNumber.NOTNULL">
            <summary>
            Parameter cannot be null.
            </summary>
        </member>
        <member name="F:ContentFilesAPI.DTO.ErrorNumber.UNKNOWN">
            <summary>
            An unexpected error occurred.
            </summary>
        </member>
        <member name="T:ContentFilesAPI.DTO.ErrorResponse">
            <summary>
            Data Transfer Object to serialize various error responses.
            </summary>
        </member>
        <member name="F:ContentFilesAPI.DTO.ErrorResponse.errorNumber">
            <summary>
            Number corresponding to type of error.
            </summary>
        </member>
        <member name="F:ContentFilesAPI.DTO.ErrorResponse.parameterName">
            <summary>
            Parameter name being referenced in the error, if relevant to error.
            </summary>
        </member>
        <member name="F:ContentFilesAPI.DTO.ErrorResponse.parameterValue">
            <summary>
            Parameter value violating validation, if relevant to error.
            </summary>
        </member>
        <member name="F:ContentFilesAPI.DTO.ErrorResponse.errorDescription">
            <summary>
            A developer-only description of the error.
            </summary>
        </member>
        <member name="M:ContentFilesAPI.DTO.ErrorResponse.#ctor(ContentFilesAPI.DTO.ErrorNumber,System.String,System.String)">
            <summary>
            Creates an error.
            </summary>
            <param name="errorNumber">Error number, indicating type of problem.</param>
            <param name="parameterName">Key holding faulty value, if relevant to error.</param>
            <param name="parameterValue">Faulty value converted to a string, if relevant to error.</param>
        </member>
        <member name="T:ContentFilesAPI.Common.LoggingEvents">
            <summary>
            Enumeration of logging levels for each type of action
            </summary>
        </member>
        <member name="F:ContentFilesAPI.Common.LoggingEvents.GetItem">
            <summary>
            Logging for GetItem actions
            </summary>
        </member>
        <member name="F:ContentFilesAPI.Common.LoggingEvents.InsertItem">
            <summary>
            Logging for InsertItem actions
            </summary>
        </member>
        <member name="F:ContentFilesAPI.Common.LoggingEvents.UpdateItem">
            <summary>
            Logging for UpdateItem actions
            </summary>
        </member>
        <member name="F:ContentFilesAPI.Common.LoggingEvents.DeleteItem">
            <summary>
            Logging for DeleteItem actions
            </summary>
        </member>
        <member name="F:ContentFilesAPI.Common.LoggingEvents.GetItemNotFound">
            <summary>
            Logging for GetItem errors where item is not found
            </summary>
        </member>
        <member name="F:ContentFilesAPI.Common.LoggingEvents.UpdateItemNotFound">
            <summary>
            Logging for UpdateItem where target item is not found
            </summary>
        </member>
        <member name="F:ContentFilesAPI.Common.LoggingEvents.DeleteItemNotFound">
            <summary>
            Logging for DeleteItem where target item is not found
            </summary>
        </member>
        <member name="F:ContentFilesAPI.Common.LoggingEvents.InternalError">
            <summary>
            Logging for any other internal server error
            </summary>
        </member>
        <member name="T:ContentFilesAPI.Program">
            <summary>
            CLI interface for starting API web service
            </summary>
        </member>
        <member name="M:ContentFilesAPI.Program.Main(System.String[])">
            <summary>
            Given CLI args, builds and runs a webserver
            </summary>
            <param name="args">CLI args</param>
        </member>
        <member name="M:ContentFilesAPI.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            Creates a web server with args with specifications from Startup.cs
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:ContentFilesAPI.Startup">
            <summary>
            Defines the configuration of the Web API application
            </summary>
        </member>
        <member name="M:ContentFilesAPI.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:ContentFilesAPI.Startup" /> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="hostingEnvironment">The hosting environment.</param>
        </member>
        <member name="P:ContentFilesAPI.Startup.HostingEnvironment">
            <summary>
            Gets the hosting environment.
            </summary>
            <value>
            The hosting environment.
            </value>
        </member>
        <member name="P:ContentFilesAPI.Startup.Configuration">
            <summary>
            Gets the configuration.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="M:ContentFilesAPI.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:ContentFilesAPI.Startup.ConfigureSwaggerUI(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <summary>
            Configures the swagger UI in middleware.
            </summary>
            <param name="swaggerGenOptions">The swagger gen options.</param>
        </member>
        <member name="M:ContentFilesAPI.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Configures the application.
            </summary>
            <param name="app">The application.</param>
            <param name="env">The env.</param>
        </member>
    </members>
</doc>
